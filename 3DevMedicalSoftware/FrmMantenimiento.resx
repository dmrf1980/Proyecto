<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureImagenPerfil.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="OFcargarImagen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>19, 17</value>
  </metadata>
</root>